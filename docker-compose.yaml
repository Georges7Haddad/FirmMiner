version: "3.9"
services:
  mailhog:
    image: mailhog/mailhog:v1.0.1
    ports:
      - 1025:1025 # smtp server
      - 8025:8025 # web ui
  postgres:
    image: postgres:12
    container_name: postgres
    environment:
      - POSTGRES_HOST=${POSTGRES_HOST}
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
  webapp:
    build:
      context: .
      dockerfile: config/webapp_dockerfile
    ports:
      - 8000:8000
    environment:
      - POSTGRES_HOST=${POSTGRES_HOST}
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - SMTP_HOST=${SMTP_HOST}
      - SMTP_PORT=${SMTP_PORT}
      - DJANGO_SETTINGS_MODULE=${DJANGO_SETTINGS_MODULE}
    depends_on:
      - postgres
    restart: on-failure:5
  scraper:
    build:
      context: .
      dockerfile: config/miner_dockefile
    environment:
      - POSTGRES_HOST=${POSTGRES_HOST}
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - AWS_DEFAULT_REGION=${AWS_DEFAULT_REGION}
      - AWS_ACCESS_KEY_ID=${AWS_ACCESS_KEY_ID}
      - AWS_SECRET_ACCESS_KEY=${AWS_SECRET_ACCESS_KEY}
      - BUCKET_NAME=${BUCKET_NAME}
      - DJANGO_SETTINGS_MODULE=${DJANGO_SETTINGS_MODULE}
    depends_on:
      - postgres
    restart: on-failure:5
